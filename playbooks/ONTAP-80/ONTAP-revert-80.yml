################################################################################
#
# Title:        ONTAP-revert-80 - Advanced - Service Provider Customization
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2024-02-25
# Description:  Revert all steps performed in test frame 80
# 
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
# 
# Built-in help:
# ansible-doc netapp.ontap.<module_name>
#
################################################################################

- hosts:                               "ontap"
  name:                                "ONTAP-revert-80 - Advanced - Service Provider Customization"
  gather_facts:                        false
  vars:
    input: &input
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:
    - name: Remove SVM Peerings
      netapp.ontap.na_ontap_vserver_peer:
        state:                         absent
        vserver:                       "{{ item.name }}"
        peer_vserver:                  "{{ item.name }}-backup"
        peer_cluster:                  "{{ hostvars[groups['secondary_storage_clusters'][0]].cluster.name }}"
        peer_options:
          hostname: "{{ hostvars[groups['secondary_storage_clusters'][0]].ansible_host }}"
      loop:
        "{{ svm_svms }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - svm_svms | length > 0
        - item.name is defined
        - item.name is regex('^sp-svm.*')

    - name: Remove volumes
      netapp.ontap.na_ontap_volume:
        state:                         absent
        name:                          "{{ item.1 }}"
        vserver:                       "{{ item.0 }}"
      loop:
        "{{ ontap_80_svms | product(ontap_80_volumes) | list }}"
  
    - name: Delete CIFS server on SVMs
      netapp.ontap.na_ontap_cifs_server:
        state:                         absent
        name:                          "{{ item.name }}"
        vserver:                       "{{ item.svm.name }}"
        domain:                        "{{ item.ad_domain.fqdn }}"
        ou:                            "{{ item.ad_domain.organizational_unit }}"
        admin_user_name:               "{{ all_ad_join_user }}"
        admin_password:                "{{ all_ad_join_password }}"
      loop:
        "{{ protocols_cifs_services }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - protocols_cifs_services | length > 0
        - item.name is defined
        - item.svm.name is regex('^sp-svm.*')
        - security_authentication_cluster_ad_proxy.svm.name is defined and
          security_authentication_cluster_ad_proxy.svm.name != item.svm.name

    - name: Create SVMs for testing"
      netapp.ontap.na_ontap_svm:
        state:                         absent
        name:                          "{{ item.name }}"
      loop:
        "{{ svm_svms }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - svm_svms | length > 0
        - item.name is defined
        - item.name is regex('^sp-svm.*')
        - security_authentication_cluster_ad_proxy.svm.name is defined and
          security_authentication_cluster_ad_proxy.svm.name != item.name

  post_tasks: