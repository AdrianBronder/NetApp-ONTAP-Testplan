################################################################################
#
# Title:        BSS-08-08.yml
# Author:       NetApp. Inc (badrian)
# Date:         2023-08-02
# Description:  Create and attach a "mixed" volume
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.na_ontap_volume
# ansible-doc netapp.ontap.na_ontap_cifs
# ansible-doc netapp.ontap.na_ontap_rest_cli
#
################################################################################

### Does not work in lab with ansible 2.10.3 basic install
#- hosts: localhost
#  gather_facts: false
#
#- name: Include plays from BSS-08-06
#  ansible.builtin.import_playbook:
#    ./BSS-08-06.yml

### Copy of BSS-08-06
- hosts:              "{{ ontap_primary_cluster }}"
  name:               BSS-08-08 - Storage Play
  gather_facts:       false
  vars:
    input_01: &input
      username:       "{{ ontap_admin_user }}"
      password:       "{{ ontap_admin_password }}"
      https:          true
      validate_certs: false
      use_rest:       "always"
  vars_files:
    - vars/vars_labondemand.yml
  collections:
    - netapp.ontap

  pre_tasks:
  - name: Get all volumes
    netapp.ontap.na_ontap_rest_info:
      gather_subset:
        - storage/volumes
      fields:
        - name
        - nas
      parameters:
        name: "!vol0,!*_root"
      use_python_keys:          true
      hostname:                 "{{ ontap_hostname }}"
      <<: *input
    register: pre_ontap_vols

  - name: Show all volumes
    ansible.builtin.debug:
      msg: "{{ item }}"
    loop: "{{ pre_ontap_vols.ontap_info.storage_volumes.records }}"

  - name: Get all CIFS shares
    netapp.ontap.na_ontap_rest_info:
      gather_subset:
        - protocols/cifs/shares
      fields:
        - name
        - force_group_for_create
      parameters:
        name: "!ipc$,!c$"
      use_python_keys:          true
      hostname:                 "{{ ontap_hostname }}"
      <<: *input
    register: pre_ontap_cifs

  - name: Show all shares
    ansible.builtin.debug:
      msg: "{{ item }}"
    loop: "{{ pre_ontap_cifs.ontap_info.protocols_cifs_shares.records }}"

  tasks:
  - name: Create "mixed" FlexGroup
    netapp.ontap.na_ontap_volume:
      state:                      present
      name:                       "{{ ontap_08_mixed_vol_name }}"
      size:                       "{{ ontap_default_fg_size_gb }}"
      volume_security_style:      "unix"
      aggr_list:
      - "{{ ontap_primary_cluster_aggr01 }}"
      - "{{ ontap_primary_cluster_aggr02 }}"
      aggr_list_multiplier:       "{{ ontap_default_fg_multiplier }}"
      size_unit:                  gb
      space_guarantee:            "none"
      tiering_policy:             "auto"
      export_policy:              "{{ ontap_08_policy_name }}"
      junction_path:              "/{{ ontap_08_mixed_vol_name }}"
      vserver:                    "{{ ontap_primary_nas_svm }}"
      wait_for_completion:        True
      hostname:                   "{{ ontap_hostname }}"
      <<: *input

  - name: Create CIFS share
    netapp.ontap.na_ontap_cifs:
      state:                      present
      name:                       "{{ ontap_08_share_name }}"
      path:                       "/{{ ontap_08_mixed_vol_name }}"
      vserver:                    "{{ ontap_primary_nas_svm }}"
      browsable:                  true
      oplocks:                    true
      show_snapshot:              true
      show_previous_versions:     true
      hostname:                   "{{ ontap_hostname }}"
      <<: *input
  
  - name: Patch "Force Group" parameter for Windows clients accessing a Unix style volume
    netapp.ontap.na_ontap_rest_cli:
      command: 'protocol/cifs/shares'
      verb: 'PATCH'
      params: 
        vserver:                  "{{ ontap_primary_nas_svm }}"
        share-name:               "{{ ontap_08_share_name }}"
      body:
        force-group-for-create:   "pcuser"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input

  - name: Get all volumes
    netapp.ontap.na_ontap_rest_info:
      gather_subset:
        - storage/volumes
      fields:
        - name
        - nas
      parameters:
        name: "!vol0,!*_root"
      use_python_keys:          true
      hostname:                 "{{ ontap_hostname }}"
      <<: *input
    register: ontap_vols

  - name: Show all volumes
    ansible.builtin.debug:
      msg: "{{ item }}"
    loop: "{{ ontap_vols.ontap_info.storage_volumes.records }}"

  - name: Get all CIFS shares
    netapp.ontap.na_ontap_rest_info:
      gather_subset:
        - protocols/cifs/shares
      fields:
        - name
        - force_group_for_create
      parameters:
        name: "!ipc$,!c$"
      use_python_keys:          true
      hostname:                 "{{ ontap_hostname }}"
      <<: *input
    register: ontap_cifs

  - name: Show all shares
    ansible.builtin.debug:
      msg: "{{ item }}"
    loop: "{{ ontap_cifs.ontap_info.protocols_cifs_shares.records }}"

- hosts:              "{{ testenv_lin_hosts }}"
  name:               BSS-08-08 - Linux Play
  gather_facts:       false
  vars_files:
    - vars/vars_labondemand.yml

  tasks:
  - name: Ensure stale mounts are removed before proceding (in case a mount exists)
    ansible.posix.mount:
      state:                      "absent"
      src:                        "{{ ontap_primary_nas_svm }}.{{ testenv_default_dns_domain }}:/{{ ontap_03_volume_name }}"
      path:                       "{{ ontap_08_mount_path }}"
      opts:                       "rw,sync,hard,vers=3"
      fstype:                     "nfs"

  - name: Create mount directory
    ansible.builtin.file:
      path:                       "{{ ontap_08_mount_path }}"
      state:                      "directory"
      mode:                       "0755"
      
  - name: Mount NFS export on Linux host
    ansible.posix.mount:
      state:                      "mounted"
      src:                        "{{ ontap_primary_nas_svm }}.{{ testenv_default_dns_domain }}:/{{ ontap_08_mixed_vol_name }}"
      path:                       "{{ ontap_08_mount_path }}"
      opts:                       "rw,sync,hard,vers=3"
      fstype:                     "nfs"
