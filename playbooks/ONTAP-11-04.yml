################################################################################
#
# Title:        ONTAP-11-04 - SVM protocol setup
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2023-08-22
# Description:  Logical Storage Management
#               - SVM protocol setup
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.<module_name>
# 
################################################################################

- hosts:              "{{ ontap_primary_test_cluster }}"
  name:               "ONTAP-11-04 - SVM protocol setup"
  gather_facts:       false
  vars:
    input: &input
      hostname:                   "{{ ansible_host }}"
      username:                   "{{ ontap_admin_user }}"
      password:                   "{{ ontap_admin_password }}"
      https:                      true
      validate_certs:             false
      use_rest:                   "always"
  vars_files:
    - ../vars/labondemand/vars.yml
    - ../vars/labondemand/vault.yml
  collections:
    - netapp.ontap

  pre_tasks:

  tasks:
  - name: Patch SVM NFS service to support 64-bit file identifiers by default
    netapp.ontap.na_ontap_rest_cli:
      command:                    'vserver/nfs'
      verb:                       'PATCH'
      params: 
        vserver:                  "{{ item.name }}"
      body:
        v3-64bit-identifiers:     "enabled"
        v4-64bit-identifiers:     "enabled"
      <<: *input
    loop:
      "{{ svm_svms }}"
    loop_control:
      label: "{{ item.name }}"
    when:
      - svm_svms | length > 0
      - item.name is defined
      - item.nfs.allowed
      - security_authentication_cluster_ad_proxy.svm.name is defined and
        security_authentication_cluster_ad_proxy.svm.name != item.name

  - name: Create CIFS server on SVMs
    netapp.ontap.na_ontap_cifs_server:
      state:                      present
      name:                       "{{ item.name }}"
      vserver:                    "{{ item.svm.name }}"
      service_state:              started
      domain:                     "{{ item.ad_domain.fqdn }}"
      ou:                         "{{ item.ad_domain.organizational_unit }}"
      admin_user_name:            "{{ testenv_ad_join_user }}"
      admin_password:             "{{ testenv_ad_join_password }}"
      <<: *input
    loop:
      "{{ protocols_cifs_services }}"
    loop_control:
      label: "{{ item.name }}"
    when:
      - protocols_cifs_services | length > 0
      - item.name is defined 
      - security_authentication_cluster_ad_proxy.svm.name is defined and
        security_authentication_cluster_ad_proxy.svm.name != item.svm.name

  post_tasks: