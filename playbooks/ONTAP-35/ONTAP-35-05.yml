################################################################################
#
# Title:        ONTAP-35-05 - Mount & Write (Windows)
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2023-10-31
# Description:  iSCSI
#               - Mount & Write (Windows)
#
################################################################################

- hosts:                               "primary_storage_clusters"
  name:                                "ONTAP-35-05 - Mount & Write (Windows) - ONTAP"
  gather_facts:                        false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:
    - name: Get LUNs from "{{ global_primary_san_svm }}"
      netapp.ontap.na_ontap_rest_info:
        gather_subset:
          - "storage/luns"
        fields:
          - "svm"
          - "location"
          - "serial_number"
        parameters:
          svm.name:                    "{{ global_primary_san_svm }}"
        use_python_keys:               true
      register: lun_info

  post_tasks:

- hosts:                               "windows_hosts"
  name:                                "ONTAP-35-05 - Discover, Login & Mount (Windows) - Windows"
  gather_facts:                        true
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - ansible.windows
    - community.windows

  pre_tasks:

  tasks:
    - name: Add iSCSI portals
      ansible.windows.win_powershell:
        script:
          "New-IscsiTargetPortal \
           -TargetPortalAddress {{ item.ip.address }}"
      loop_control:
        label: "{{ item.ip.address }}"
      loop:
        "{{ hostvars[groups['primary_storage_clusters'][0]].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list }}"

    - name: Read iSCSI targets
      ansible.windows.win_powershell:
        script:
          "Get-IscsiTarget"
      register: ps_iscsi_targets

    - name: Connect iSCSI targets
      ansible.windows.win_powershell:
        script:
          "Connect-IscsiTarget \
           -NodeAddress {{ (ps_iscsi_targets.output | \
                            selectattr('NodeAddress', 'search', 'netapp') | \
                            first).NodeAddress }} \
           -InitiatorPortalAddress {{ item.1.ipv4.address }} \
           -TargetPortalAddress {{ item.0.ip.address }} \
           -IsMultipathEnabled $true -IsPersistent $true"
      loop_control:
        label: "Connect {{ item.1.ipv4.address }} to {{ item.0.ip.address }}"
      loop:
        "{{ hostvars[groups['primary_storage_clusters'][0]].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list |
            product(ansible_interfaces) | list }}"

    - name: Collect disk facts
      community.windows.win_disk_facts:
      register: win_disk_facts

    - name: Initialize disks
      community.windows.win_initialize_disk:
        disk_number:                   "{{ (win_disk_facts.ansible_facts.ansible_disks |
                                            selectattr('serial_number', 'defined') |
                                            selectattr('serial_number', '==', (hostvars[groups['primary_storage_clusters'][0]].lun_info.ontap_info.storage_luns.records |
                                                                               selectattr('name', 'defined') |
                                                                               selectattr('name', '==', item ) |
                                                                               first ).serial_number) |
                                            first ).number }}"
        online:                        true
        force:                         true
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Partition disks
      community.windows.win_partition:
        partition_size:                -1
        partition_number:              2
        gpt_type:                      "basic_data"
        disk_number:                   "{{ (win_disk_facts.ansible_facts.ansible_disks |
                                            selectattr('serial_number', 'defined') |
                                            selectattr('serial_number', '==', (hostvars[groups['primary_storage_clusters'][0]].lun_info.ontap_info.storage_luns.records |
                                                                               selectattr('name', 'defined') |
                                                                               selectattr('name', '==', item ) |
                                                                               first ).serial_number) |
                                            first ).number }}"
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Re-Collect disk facts (with new partitions)
      community.windows.win_disk_facts:
      register: win_disk_facts

    - name: Format disks
      community.windows.win_format:
        file_system:                   "ntfs"
        path:                          "{{ (win_disk_facts.ansible_facts.ansible_disks |
                                            selectattr('serial_number', 'defined') |
                                            selectattr('serial_number', '==', (hostvars[groups['primary_storage_clusters'][0]].lun_info.ontap_info.storage_luns.records |
                                                                               selectattr('name', 'defined') |
                                                                               selectattr('name', '==', item ) |
                                                                               first ).serial_number) |
                                            first ).partitions[1].volumes[0].path }}"
        new_label:                     "{{ item | split('/') | last }}"
        force:                         true
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Create root mount directory
      ansible.windows.win_file:
        path:                          "{{ windows_35_mount_dir }}"
        state:                         directory

    - name: Create mount directories for LUNs
      ansible.windows.win_file:
        path:                          "{{ windows_35_mount_dir }}\\{{ item | split('/') | last }}"
        state:                         directory
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Change ACLs on device path
      ansible.windows.win_acl:
        state:                         present
        user:                          "Everyone"
        rights:                        "Modify,ReadAndExecute,ListDirectory,Read,Write"
        type:                          "allow"
        path:                          "{{ (win_disk_facts.ansible_facts.ansible_disks |
                                            selectattr('serial_number', 'defined') |
                                            selectattr('serial_number', '==', (hostvars[groups['primary_storage_clusters'][0]].lun_info.ontap_info.storage_luns.records |
                                                                               selectattr('name', 'defined') |
                                                                               selectattr('name', '==', item ) |
                                                                               first ).serial_number) |
                                            first ).partitions[1].access_paths[0] }}"
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Add access paths to LUNs
      ansible.windows.win_powershell:
        script:
          "Add-PartitionAccessPath \
           -DiskNumber {{ (win_disk_facts.ansible_facts.ansible_disks |
                                       selectattr('serial_number', 'defined') |
                                       selectattr('serial_number', '==', (hostvars[groups['primary_storage_clusters'][0]].lun_info.ontap_info.storage_luns.records |
                                                                          selectattr('name', 'defined') |
                                                                          selectattr('name', '==', item ) |
                                                                          first ).serial_number) |
                                       first ).number }} \
           -PartitionNumber 2 \
           -AccessPath {{windows_35_mount_dir}}\\\\{{ item | split('/') | last }}"
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Change ACLs on mount paths
      ansible.windows.win_acl:
        state:                         present
        user:                          "Everyone"
        rights:                        "Modify,ReadAndExecute,ListDirectory,Read,Write"
        type:                          "allow"
        path:                          "{{ (win_disk_facts.ansible_facts.ansible_disks |
                                            selectattr('serial_number', 'defined') |
                                            selectattr('serial_number', '==', (hostvars[groups['primary_storage_clusters'][0]].lun_info.ontap_info.storage_luns.records |
                                                                               selectattr('name', 'defined') |
                                                                               selectattr('name', '==', item ) |
                                                                               first ).serial_number) |
                                            first ).partitions[1].access_paths[0] }}"
      loop:
        "{{ ontap_35_win_luns }}"

    - name: Create test file on each LUN
      ansible.windows.win_file:
        path:                          "{{ windows_35_mount_dir }}\\{{ item | split('/') | last }}\\{{ item | split('/') | last }}_testfile"
        state:                         touch
      loop:
        "{{ ontap_35_win_luns }}"

  post_tasks: