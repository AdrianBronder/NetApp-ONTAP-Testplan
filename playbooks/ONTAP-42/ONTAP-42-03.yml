################################################################################
#
# Title:        ONTAP-42-03 - Prepare Filesystem
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2024-01-19
# Description:  Quality of Service
#               - Prepare Filesystem
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.<module_name>
# 
################################################################################

- hosts:                               "primary_storage_clusters"
  name:                                "ONTAP-42-03 - Prepare Filesystem"
  gather_facts:                        false
  vars:
    input: &input
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap

  pre_tasks:

  tasks:
    - name: Create read-write export policy
      netapp.ontap.na_ontap_export_policy:
        state:                         present
        name:                          "{{ ontap_42_policy_name }}"
        vserver:                       "{{ global_primary_nas_svm }}"
        <<: *input
  
    - name: Create read-write export policy rules for data volumes
      na_ontap_export_policy_rule:
        state:                         present
        name:                          "{{ ontap_42_policy_name }}"
        vserver:                       "{{ global_primary_nas_svm }}"
        client_match:                  "{{ groups['linux'] | map('extract', hostvars, ['ansible_host']) }}"
        ro_rule:                       "any"
        rw_rule:                       "any"
        protocol:                      "nfs"
        super_user_security:           "any"
        allow_suid:                    true
        <<: *input

    - name: Create UNIX qtree
      netapp.ontap.na_ontap_qtree:
        state:                         present
        name:                          "{{ item }}{{ ontap_42_nfs_suffix }}"
        flexvol_name:                  "{{ item }}"
        export_policy:                 "{{ ontap_42_policy_name }}"
        security_style:                "unix"
        unix_permissions:              0777
        vserver:                       "{{ global_primary_nas_svm }}"
        <<: *input
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Create NTFS qtree
      netapp.ontap.na_ontap_qtree:
        state:                         present
        name:                          "{{ item }}{{ ontap_42_cifs_suffix }}"
        flexvol_name:                  "{{ item }}"
        security_style:                "ntfs"
        vserver:                       "{{ global_primary_nas_svm }}"
        <<: *input
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Create share
      netapp.ontap.na_ontap_cifs:
        state:                         present
        name:                          "{{ item }}{{ ontap_42_cifs_suffix }}"
        path:                          "/{{ item }}/{{ item }}{{ ontap_42_cifs_suffix }}"
        vserver:                       "{{ global_primary_nas_svm }}"
        browsable:                     true
        oplocks:                       true
        show_snapshot:                 true
        comment:                       "Test share created as part of test frame ONTAP-42"
        <<: *input
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Remove "Full Control" for "Everyone"
      netapp.ontap.na_ontap_cifs_acl:
        state:                         absent
        share_name:                    "{{ item }}{{ ontap_42_cifs_suffix }}"
        vserver:                       "{{ global_primary_nas_svm }}"
        user_or_group:                 "Everyone"
        permission:                    "full_control"
        <<: *input
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Create ACL on test share (admins - Full Control)
      netapp.ontap.na_ontap_cifs_acl:
        state:                         present
        share_name:                    "{{ item }}{{ ontap_42_cifs_suffix }}"
        vserver:                       "{{ global_primary_nas_svm }}"
        user_or_group:                 "{{ ontap_42_ad_admin_group }}"
        permission:                    "full_control"
        <<: *input
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Create ACL on test share (read-only users - Read)
      netapp.ontap.na_ontap_cifs_acl:
        state:                         present
        share_name:                    "{{ item }}{{ ontap_42_cifs_suffix }}"
        vserver:                       "{{ global_primary_nas_svm }}"
        user_or_group:                 "{{ ontap_42_ad_ro_group }}"
        permission:                    "read"
        <<: *input
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

  post_tasks:

- hosts:              "linux"
  name:               "ONTAP-42-04 - Client Write"
  gather_facts:       false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - ansible.posix
    - community.general

  pre_tasks:

  tasks:
    - name: Ensure stale mounts are removed before proceding (in case a mount exists)
      ansible.posix.mount:
        state:                         "absent"
        src:                           "{{ global_primary_nas_svm }}.{{ all_default_dns_domain }}:/\
                                        {{ item }}/{{ item }}{{ ontap_42_nfs_suffix }}"
        path:                          "{{ linux_42_mount_dir }}/{{ item }}{{ ontap_42_nfs_suffix }}"
#        opts:                          "rw,sync,hard,vers=3"
        fstype:                        "nfs"
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Create mount directory
      ansible.builtin.file:
        path:                          "{{ linux_42_mount_dir }}/{{ item }}{{ ontap_42_nfs_suffix }}"
        state:                         "directory"
        mode:                          "0755"
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"

    - name: Mount NFS export on Linux host
      ansible.posix.mount:
        state:                         "mounted"
        src:                           "{{ global_primary_nas_svm }}.{{ all_default_dns_domain }}:/\
                                        {{ item }}/{{ item }}{{ ontap_42_nfs_suffix }}"
        path:                          "{{ linux_42_mount_dir }}/{{ item }}{{ ontap_42_nfs_suffix }}"
#        opts:                          "rw,sync,hard,vers=3"
        fstype:                        "nfs"
      loop:
        - "{{ ontap_42_vol_name }}"
        - "{{ ontap_42_qos_vol_name }}"