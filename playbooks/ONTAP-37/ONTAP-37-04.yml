################################################################################
#
# Title:        ONTAP-37-04 - Mount & Write (Linux)
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2023-11-22
# Description:  NVMe/TCP
#               - Mount & Write (Linux)
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.<module_name>
# 
################################################################################

- hosts:                               "linux_hosts""
  name:                                "ONTAP-37-04 - Mount & Write (Linux)"
  gather_facts:                        true
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - community.general
    - ansible.posix

  pre_tasks:

  tasks:
    - name: Connect NVMe namespaces
      ansible.builtin.command:
        cmd: "nvme connect-all -t tcp -a {{ item.ip.address }}"
      loop_control:
        label: "{{ item.ip.address }}"
      loop:
        "{{ hostvars['primary_storage_cluster'].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'nvme-tcp') |
            list }}"

    - name: Read connected namespaces
      ansible.utils.cli_parse:
        command: "nvme netapp ontapdevices -o json"
        parser:
          name: ansible.utils.json
        set_fact: linux_ontap_ns

    - name: Build filesystem on namespaces
      community.general.filesystem:
        fstype:                        "ext4"
        dev:                           "{{ (linux_ontap_ns.ONTAPdevices |
                                            selectattr('Namespace_Path', 'defined') |
                                            selectattr('Namespace_Path', '==', item ) |
                                            first ).Device }}"
      loop:
        "{{ ontap_37_lin_namespaces }}"

    - name: Create mount directory  
      ansible.builtin.file:
        path:                          "{{ linux_37_mount_dir }}/{{ item | split('/') | last }}"
        state:                         "directory"
        mode:                          "0755"
      loop:
        "{{ ontap_37_lin_namespaces }}"
  
    - name: Mount namespaces
      ansible.posix.mount:
        state:                         "mounted"
        src:                           "{{ (linux_ontap_ns.ONTAPdevices |
                                            selectattr('Namespace_Path', 'defined') |
                                            selectattr('Namespace_Path', '==', item ) |
                                            first ).Device }}"
        path:                          "{{ linux_37_mount_dir }}/{{ item | split('/') | last }}"
        fstype:                        "ext4"
        opts:                          "discard"
      loop:
        "{{ ontap_37_lin_namespaces }}"
  
    - name: Create test file on Namespace
      community.general.filesize:
        path:                          "{{ linux_37_mount_dir }}/\
                                        {{ item | split('/') | last }}/\
                                        {{ item | split('/') | last }}_testfile"
        size:                          50MB
      loop:
        "{{ ontap_37_lin_namespaces }}"

  post_tasks:
