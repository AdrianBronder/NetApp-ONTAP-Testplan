################################################################################
#
# Title:        ONTAP-35-05 - Discover, Login & Mount (Windows)
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2023-10-31
# Description:  iSCSI
#               - Discover, Login & Mount (Windows)
#
# https://www.itprotoday.com/cloud-computing/q-how-can-i-use-command-line-configure-iscsi-connections
# https://www.windowspro.de/wolfgang-sommergut/iscsi-verbindungen-powershell-verwalten
#
################################################################################

- hosts:                          "{{ global_primary_test_cluster }}"
  name:                           "ONTAP-35-05 - Discover, Login & Mount (Windows) - ONTAP"
  gather_facts:                   false
  vars:
    input: &input
      hostname:                   "{{ ansible_host }}"
      username:                   "{{ ontap_admin_user }}"
      password:                   "{{ ontap_admin_password }}"
      https:                      true
      validate_certs:             false
      use_rest:                   "always"
  vars_files:
    - ../vars/labondemand/vars.yml
    - ../vars/labondemand/vault.yml
  collections:
    - netapp.ontap

  pre_tasks:

  tasks:
    - name: Get LUNs from "{{ global_primary_san_svm }}"
      netapp.ontap.na_ontap_rest_info:
        gather_subset:
          - "storage/luns"
        fields:
          - "svm"
          - "location"
          - "serial_number"
        parameters:
          svm.name:               "{{ global_primary_san_svm }}"
        use_python_keys:          true
        <<: *input
      register: lun_info

  post_tasks:

- hosts:              "{{ global_primary_windows_host }}"
  name:               "ONTAP-35-05 - Discover, Login & Mount (Windows) - Windows"
  gather_facts:       true
  vars_files:
    - ../vars/labondemand/vars.yml
    - ../vars/labondemand/vault.yml
  collections:
    - ansible.windows
    - community.windows

  pre_tasks:

  tasks:
    - name: Add iSCSI portals
      ansible.windows.win_powershell:
        script:
          "New-IscsiTargetPortal \
           -TargetPortalAddress {{ item.ip.address }}"
      loop_control:
        label: "{{ item.ip.address }}"
      loop:
        "{{ hostvars[global_primary_test_cluster].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list }}"

    - name: Read iSCSI targets
      ansible.windows.win_powershell:
        script:
          "Get-IscsiTarget"
      register: ps_iscsi_targets

    - name: Connect iSCSI targets
      ansible.windows.win_powershell:
        script:
          "Connect-IscsiTarget \
           -NodeAddress {{ (ps_iscsi_targets.output | \
                            selectattr('NodeAddress', 'search', 'netapp') | \
                            first).NodeAddress }} \
           -InitiatorPortalAddress {{ item.1.ipv4.address }} \
           -TargetPortalAddress {{ item.0.ip.address }} \
           -IsMultipathEnabled $true -IsPersistent $true"
      loop_control:
        label: "Connect {{ item.1.ipv4.address }} to {{ item.0.ip.address }}"
      loop:
        "{{ hostvars[global_primary_test_cluster].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list |
            product(ansible_interfaces) | list }}"

    - name: Collect disk facts
      community.windows.win_disk_facts:
      register: win_disk_facts

    - name: Initialize disks
      community.windows.win_initialize_disk:
        disk_number:              "{{ (win_disk_facts.ansible_facts.ansible_disks |
                                      selectattr('serial_number', 'defined') |
                                      selectattr('serial_number', '==', (hostvars[global_primary_test_cluster].lun_info.ontap_info.storage_luns.records |
                                                                        selectattr('name', 'defined') |
                                                                        selectattr('name', '==', item ) |
                                                                        first ).serial)).number }}"
      loop:
        "{{ ontap_35_win_luns }}"
        
  post_tasks: