################################################################################
#
# Title:        ONTAP-35-05 - Discover, Login & Mount (Windows)
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2023-10-31
# Description:  iSCSI
#               - Discover, Login & Mount (Windows)
#
# https://www.itprotoday.com/cloud-computing/q-how-can-i-use-command-line-configure-iscsi-connections
# https://www.windowspro.de/wolfgang-sommergut/iscsi-verbindungen-powershell-verwalten
#
################################################################################

- hosts:              "{{ global_primary_windows_host }}"
  name:               "ONTAP-35-05 - Discover, Login & Mount (Windows)"
  gather_facts:       false
  vars_files:
    - ../vars/labondemand/vars.yml
    - ../vars/labondemand/vault.yml
  collections:
    - ansible.windows
    - community.windows

  pre_tasks:

  tasks:
    - name: Add iSCSI portal
      ansible.windows.win_powershell:
        script: |
          New-IscsiTargetPortal -TargetPortalAddress {{ item.ip.address }}
      loop_control:
        label: "{{ item.ip.address }}"
      loop:
        "{{ hostvars[global_primary_test_cluster].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list }}"

    - name: Get iSCSI targets
      ansible.windows.win_powershell:
        script: |
          Get-IscsiTarget
      register: ps_iscsi_targets

    - name: Connect iSCSI targets
      ansible.windows.win_powershell:
        script:
          "Connect-IscsiTarget \
           -NodeAddress {{ (ps_iscsi_targets.output | \
                            selectattr('NodeAddress', 'search', 'netapp') | \
                            first).NodeAddress }} \
           -InitiatorPortalAddress {{ item.1.ipv4.address }} \
           -TargetPortalAddress {{ item.0.ip.address }} \
           -IsMultipathEnabled $true -IsPersistent $true"
      loop_control:
        label: "Connect {{ item.1.ipv4.address }} to {{ item.0.ip.address }}"
      loop:
        "{{ hostvars[global_primary_test_cluster].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list |
            product(ansible_interfaces) | list }}"

  post_tasks: