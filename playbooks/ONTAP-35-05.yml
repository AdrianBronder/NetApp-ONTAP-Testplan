################################################################################
#
# Title:        ONTAP-35-05 - Discover, Login & Mount (Windows)
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2023-10-31
# Description:  iSCSI
#               - Discover, Login & Mount (Windows)
#
# https://www.itprotoday.com/cloud-computing/q-how-can-i-use-command-line-configure-iscsi-connections
# https://www.windowspro.de/wolfgang-sommergut/iscsi-verbindungen-powershell-verwalten
#
################################################################################

- hosts:              "win_hosts"
  name:               "ONTAP-35-05 - Discover, Login & Mount (Windows)"
  gather_facts:       false
  vars_files:
    - ../vars/labondemand/vars.yml
    - ../vars/labondemand/vault.yml
  collections:
    - ansible.windows
    - community.windows

  pre_tasks:

  tasks:
    - name: Run PowerShell script with parameters
      ansible.windows.win_powershell:
        script: |
          New-IscsiTargetPortal -TargetPortalAddress {{ item.ip.address }}
      loop_control:
        label: "{{ item.ip.address }}"
      loop:
        "{{ hostvars[global_primary_test_cluster].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list }}"

    - name: Run PowerShell script with parameters
      ansible.windows.win_powershell:
        script: |
          Get-IscsiTarget
      register: ps_iscsi_targets

    - debug:
        msg: "{{ ps_iscsi_targets }}"

    - name: Run PowerShell script with parameters
      ansible.windows.win_powershell:
        script: |
          Connect-IscsiTarget -NodeAddress iqn.1992-08.com.netapp:sn.04f8e1e6772911eea2b5005056b76a95:vs.22 -InitiatorPortalAddress 192.168.0.5 -TargetPortalAddress {{ item.ip.address }} -IsMultipathEnabled $true -IsPersistent $true
      loop_control:
        label: "{{ item.ip.address }}"
      loop:
        "{{ hostvars[global_primary_test_cluster].network_ip_interfaces |
            selectattr('svm.name', 'defined') |
            selectattr('svm.name', '==', global_primary_san_svm) |
            selectattr('service_policy.name', 'search', 'block') |
            list }}"

  post_tasks: