################################################################################
#
# Title:        revert_BSS-00.yml
# Author:       NetApp Inc. (badrian)
# Date:         2023-07-25
# Description:  Revert configuration steps for BSS-00
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
################################################################################

- hosts:              "{{ ontap_primary_cluster }}"
  name:               revert_BSS-00
  gather_facts:       false
  vars_prompt:
    - name:           testenv_ad_join_pw
      prompt:         "Please enter password for user  {{ testenv_ad_join_user }}"
      private:        true
  vars:
    input: &input
      username:       "{{ ontap_admin_user }}"
      password:       "{{ ontap_admin_password }}"
      https:          true
      validate_certs: false
      use_rest:       "always"
  vars_files:
    - vars/vars_labondemand.yml
  collections:
    - netapp.ontap

  tasks:  
  - name: Delete CIFS server on SVMs
    netapp.ontap.na_ontap_cifs_server:
      state:                      absent
      name:                       "{{ item.cifs_name }}"                  
      vserver:                    "{{ item.name }}"
      domain:                     "{{ testenv_ad_domain }}"
      ou:                         "{{ testenv_storage_ad_ou_path }}"
      admin_user_name:            "{{ testenv_ad_join_user }}"
      admin_password:             "{{ testenv_ad_join_pw }}"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input
    loop:
      "{{ ontap_svms }}"
    loop_control:
      label: "{{ item.name }}"

  - name: Delete SVMs
    netapp.ontap.na_ontap_svm:
      state:                      absent
      name:                       "{{ item.name }}"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input
    loop:
      "{{ ontap_svms }}"
    loop_control:
      label: "{{ item.name }}"

  - name: Get volumes from aggregate to be deleted
    netapp.ontap.na_ontap_rest_info:
      gather_subset:
      - "storage/volumes"
      fields:
      - "aggregates"
      - "svm"
      parameters: 
        aggregates.name:          "{{ ontap_primary_cluster_aggr02 }}"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input
    register: vol_info

  - name: Move volumes to standard test aggregate
    netapp.ontap.na_ontap_volume:
      name:                       "{{ item.name }}"
      vserver:                    "{{ item.svm.name }}"
      aggregate_name:             "{{ ontap_primary_cluster_aggr01 }}"
      wait_for_completion:        true
      check_interval:             10
      hostname:                   "{{ ontap_hostname }}"
      <<: *input
    when: 
    - vol_info.ontap_info['storage/volumes'].num_records|int > 0
    - item.name is defined
    loop:
      "{{ vol_info.ontap_info['storage/volumes'].records }}"

  - name: Delete test aggregate (aka "Storage Pool")
    netapp.ontap.na_ontap_aggregate:
      state:                      absent
      name:                       "{{ ontap_primary_cluster_aggr02 }}"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input

  - name: Error handling block
    block:
    - name: Delete object store config
      netapp.ontap.na_ontap_object_store:
        state:                      absent
        name:                       "{{ ontap_10_s3_objectstore_name }}"
        hostname:                   "{{ ontap_hostname }}"
        <<: *input
    rescue:
    - name: Printing rescue message
      ansible.builtin.debug:
        msg: "Remote bucket needs to be empty or deleted - \
              This cannot be achieved from the primary storage array"

  - name: Remove onboard Key Manager
    netapp.ontap.na_ontap_security_key_manager:
      state:                      absent
      hostname:                   "{{ ontap_hostname }}"
      <<: *input

  - name: Remove NTP servers
    netapp.ontap.na_ontap_ntp:
      state:                      absent
      server_name:                "{{ item }}"
      hostname:                   "{{ ontap_hostname }}"
      use_rest:                   "always"
      <<: *input
    loop:
      "{{ testenv_ntp_serveres }}"