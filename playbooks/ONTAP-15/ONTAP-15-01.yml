################################################################################
#
# Title:        ONTAP-15-01 - Peering Network
# Author:       NetApp Inc. (badrian)
# Initial 
# Create Date:  2024-01-03
# Description:  Cluster Peering
#               - Peering Network
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.<module_name>
# 
################################################################################

- hosts:                               "ontap"
  name:                                "ONTAP-15-01 - Peering Network"
  gather_facts:                        false
  vars_files:
    - ../../vars/{{ inventory_dir | split('/') | last }}/vars.yml
    - ../../vars/{{ inventory_dir | split('/') | last }}/vault.yml
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname:                        "{{ ansible_host }}"
      username:                        "{{ ontap_admin_user }}"
      password:                        "{{ ontap_admin_password }}"
      https:                           true
      validate_certs:                  false
      use_rest:                        "always"

  pre_tasks:

  tasks:
    - name: Create peering IPspace
      netapp.ontap.na_ontap_ipspace:
        state:                         present
        name:                          "{{ item.name }}"
      loop:
        "{{ network_ipspaces }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - item.name is defined

    - name: Create peering broadcast domain on storage cluster
      netapp.ontap.na_ontap_broadcast_domain:
        state:                         present
        name:                          "{{ item.name }}"
        mtu:                           "{{ item.mtu }}"
        ipspace:                       "{{ item.ipspace.name }}"
      loop:
        "{{ network_ethernet_broadcast_domains }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - item.name is defined
        - item.ipspace.name != "Default"

    - name: Create peering interface groups on storage cluster
      netapp.ontap.na_ontap_net_ifgrp:
        state:                         present
        node:                          "{{ item.node.name }}"
        broadcast_domain:              "{{ item.broadcast_domain.name }}"
        ipspace:                       "{{ item.broadcast_domain.ipspace.name }}"
        ports:                         "{{ item.lag.member_ports | map(attribute='name') | flatten }}"
        distribution_function:         "{{ item.lag.distribution_policy }}"
        mode:                          "{{ item.lag.mode }}"
      loop:
        "{{ network_ethernet_ports }}"
      loop_control:
        label: "{{ item.node.name }}:{{ item.name }}"
      when:
        - item.name is defined
        - item.broadcast_domain.ipspace.name is defined
        - item.broadcast_domain.ipspace.name != "Default"

    - name: Create peering interfaces
      netapp.ontap.na_ontap_interface:
        state:                         present
        interface_name:                "{{ item.name }}"
        ipspace:                       "{{ item.ipspace.name }}"
        home_node:                     "{{ item.location.home_node.name }}"
        home_port:                     "{{ item.location.home_port.name }}"
        address:                       "{{ item.ip.address }}"
        netmask:                       "{{ item.ip.netmask }}"
        service_policy:                "{{ item.service_policy.name | default(omit) }}"
        is_auto_revert:                "{{ item.location.auto_revert | default(omit) }}"
      loop:
        "{{ network_ip_interfaces }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - network_ip_interfaces | length > 0
        - item.scope == "cluster"
        - item.service_policy.name == "default-intercluster"

  post_tasks: