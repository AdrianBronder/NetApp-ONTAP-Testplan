################################################################################
#
# Title:        ONTAP-00-01 - Cluster Network Config 
# Author:       NetApp Inc. (badrian)
# Date:         2023-07-25
# Description:  Initial cluster configuration for testing
#               - Network and network services
#
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc <module.name>
# 
################################################################################

- hosts:              "ontap"
  name:               ONTAP-00-01 - Cluster Network Config
  gather_facts:       false
  vars:
    input: &input
      username:       "{{ ontap_admin_user }}"
      password:       "{{ ontap_admin_password }}"
      https:          true
      validate_certs: false
      use_rest:       "always"
  vars_files:
    - ../vars/labondemand.yml
  collections:
    - netapp.ontap

  tasks:
  - name: Create broadcast domains on storage cluster
    netapp.ontap.na_ontap_broadcast_domain:
      state:                      present
      name:                       "{{ item.name }}"
      mtu:                        "{{ item.mtu }}"
      ipspace:                    "{{ item.ipspace.name }}"
      hostname:                   "{{ ansible_host }}"
      <<: *input
    loop:
      "{{ network_ethernet_broadcast_domains }}"
    loop_control:
      label: "{{ item.name }}"
    when:
      - item.name is defined

  - name: Create interface groups on storage cluster
    netapp.ontap.na_ontap_net_ifgrp:
      state:                      present
      node:                       "{{ item.node.name }}"
      broadcast_domain:           "{{ item.broadcast_domain.name }}"
      ipspace:                    "{{ item.broadcast_domain.ipspace.name }}"
      ports:                      "{{ item.lag.member_ports | map(attribute='name') | flatten }}"
      distribution_function:      "{{ item.lag.distribution_policy }}"
      mode:                       "{{ item.lag.mode }}"
      hostname:                   "{{ ansible_host }}"
      <<: *input
    loop:
      "{{ network_ethernet_ports }}"
    loop_control:
      label: "{{ item.node.name }}:{{ item.name }}"
    when:
      - item.name is defined

  - name: Configure default network route on storage cluster
    netapp.ontap.na_ontap_net_routes:
      state:                      present
      vserver:                    
      destination:                "0.0.0.0/0"
      gateway:                    "{{ testenv_default_gateway }}"
      hostname:                   "{{ ansible_host }}"
      <<: *input

  - name: Create DNS config on storage cluster
    netapp.ontap.na_ontap_dns:
      state:                      present
      vserver:                    "{{ inventory_hostname }}"
      domains:                    "{{ testenv_dns_domains }}"
      nameservers:                "{{ testenv_dns_nameservers }}"
      hostname:                   "{{ ansible_host }}"
      use_rest:                   "never"
      <<: *input

  - name: Create NTP server on storage cluster
    netapp.ontap.na_ontap_ntp:
      state:                      present
      server_name:                "{{ item }}"
      version:                    "auto"
      hostname:                   "{{ ansible_host }}"
      use_rest:                   "always"
      <<: *input
    loop:
      "{{ testenv_ntp_serveres }}"
    retries: 10
    delay: 20
    register: result
    until: not result.failed
    ignore_errors: true

  - debug:
      msg: "{{ result }}"

  - name: Set timezone on storage cluster
    netapp.ontap.na_ontap_cluster:
      state:                      present
      timezone:
        name:                     "{{ testenv_timezone }}"
      hostname:                   "{{ ansible_host }}"
      use_rest:                   "always"
      <<: *input
