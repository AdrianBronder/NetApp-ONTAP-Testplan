################################################################################
#
# Title:        init_ontap.yml
# Author:       NetApp Inc. (badrian)
# Date:         2023-07-31
# Description:  Prepare lab system
# 
# URLs:         https://docs.netapp.com/us-en/ontap/index.html
#               https://galaxy.ansible.com/netapp/ontap
# 
# Built-in help:
# ansible-doc netapp.ontap.na_ontap_aggregate
# ansible-doc netapp.ontap.na_ontap_rest_info
#
################################################################################

- hosts:              "{{ ontap_primary_test_cluster }}"
  name:               "Initialize primary ONTAP cluster"
  gather_facts:       false
  vars:
    input_01: &input_01
      username:       "{{ ontap_admin_user }}"
      password:       "{{ ontap_admin_password }}"
      https:          true
      validate_certs: false
      use_rest:       "always"
  vars_files:
    - ../../playbooks/vars/vars_labondemand.yml
  collections:
    - netapp.ontap

  tasks:
  - name: Get volumes from aggregate to be deleted
    netapp.ontap.na_ontap_rest_info:
      gather_subset:
      - "storage/volumes"
      fields:
      - "aggregates"
      - "svm"
      parameters: 
        aggregates.name:          "{{ ontap_primary_cluster_aggr02 }}"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input_01
    register: vol_info

  - name: Move volumes to standard test aggregate
    netapp.ontap.na_ontap_volume:
      name:                       "{{ item.name }}"
      vserver:                    "{{ item.svm.name }}"
      aggregate_name:             "{{ ontap_primary_cluster_aggr01 }}"
      wait_for_completion:        true
      check_interval:             10
      hostname:                   "{{ ontap_hostname }}"
      <<: *input_01
    when: 
    - vol_info.ontap_info['storage/volumes'].num_records|int > 0
    - item.name is defined
    loop:
      "{{ vol_info.ontap_info['storage/volumes'].records }}"

  - name: Delete non-standard aggregate
    netapp.ontap.na_ontap_aggregate:
      state:                      absent
      name:                       "{{ ontap_primary_cluster_aggr02 }}"
      hostname:                   "{{ ontap_hostname }}"
      <<: *input_01

- hosts:              "{{ ontap_secondary_cluster }}"
  name:               Initialize secondary ONTAP cluster
  gather_facts:       false
  vars:
    input_02: &input_02
      username:       "{{ ontap_admin_user }}"
      password:       "{{ ontap_admin_password }}"
      https:          true
      validate_certs: false
      use_rest:       "always"
  vars_files:
    - ../../playbooks/vars/vars_devlab.yml
    - ./vars_labonly.yml
  collections:
    - netapp.ontap

  tasks:

  ###
  # Needed Storage, SVM + LIF, which needed a data_s3_server policy before being accessible
  ###
  # Create aggr on cluster2 
  - name: Create Aggregates in REST for Fabric Pool on Secondary
    netapp.ontap.na_ontap_aggregate:
      # state:                        "{{ state }}"
      state:                        present
      service_state:                online
      name:                         "{{ item.name }}"
      disk_count:                   "{{ ontap_secondary_aggr_disks }}"
      nodes:                        "{{ item.node }}"
      snaplock_type:                non_snaplock
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
    loop:
    - {name: "{{ ontap_secondary_cluster_aggr01 }}", node: "{{ ontap_secondary_cluster_node01 }}"}
    - {name: "{{ ontap_secondary_cluster_aggr02 }}", node: "{{ ontap_secondary_cluster_node02 }}"}

  # Create Hosting SVM for the Object Store
  - name: "Create Object SVM: {{ ontap_tier_svm.name }}"
    netapp.ontap.na_ontap_svm:
      state:                        present
      name:                         "{{ ontap_tier_svm.name }}"
      comment:                      "{{ ontap_tier_svm.comment }}"
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02

  # This is a required step for protocol access
  - name: Create service policy
    netapp.ontap.na_ontap_service_policy:
      state:                        present
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
      vserver:                      "{{ ontap_tier_svm.name }}"
      name:                         "{{ s3.service_policy }}"
      services:
        - data_core
        - data_s3_server


  - name: "Create Tiering Interface: {{ ontap_tier_svm.data_int }}"
    netapp.ontap.na_ontap_interface:
      state:                        present 
      interface_type:                ip     
      interface_name:               "{{ ontap_tier_svm.data_int }}"
      address:                      "{{ ontap_tier_svm.data_ip }}"
      netmask:                      "{{ ontap_tier_svm.data_mask }}"
      home_port:                    "{{ ontap_tier_svm.data_port }}"
      home_node:                    "{{ ontap_secondary_cluster_node02 }}"
      service_policy:               "{{ s3.service_policy }}"
      admin_status:                 up
      vserver:                      "{{ ontap_tier_svm.name }}"
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
  
  - name: Create Interface Route
    netapp.ontap.na_ontap_net_routes:
      state:                        present
      vserver:                      "{{ ontap_tier_svm.name }}"
      destination:                  0.0.0.0/0
      gateway:                      "{{ testenv_default_gateway }}"
      metric:                       30
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02

  # Create self-signed cert for SSL - since module can't disable https
  - name: create SSL certificate for HTTPS
    netapp.ontap.na_ontap_security_certificates:
      state:                        present
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
      vserver:                      "{{ ontap_tier_svm.name }}"
      common_name:                  "{{ s3.server_name }}"
      name:                         "{{ s3.ontap_cert_name }}"
      type:                         server
      expiry_time:                  P365DT     # one year

  # # Add the object store to an SVM 
  - name: create S3 service
    netapp.ontap.na_ontap_s3_services:
      state:                        present
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
      name:                         "{{ s3.server_name }}"
      vserver:                      "{{ ontap_tier_svm.name }}"
      comment:                      "{{ ontap_tier_svm.comment }}"
      enabled:                      true
      certificate_name:             "{{ s3.ontap_cert_name }}"

  # Modify S3 Object Service to run on port 80 & http 
  # - name: Adjust Object Service Paramters - Run on http & 80
  #   netapp.ontap.na_ontap_rest_cli:
  #     command: 'vserver/services/access-check/authentication/get-dc-info'  
  #     verb:                         'POST'
  #     body:                         {vserver: "{{ vserver_name }}"}
  #     hostname:                     "{{ ontap_hostname }}"
  #     <<: *input
  #   register: reponse

  # vserver object-store-server modify -vserver vs-nfs-tier -object-store-server s3server.demo.netapp.com -status-admin down    
  - name: Shut S3 Server down to modify
    netapp.ontap.na_ontap_command:
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
      command: ['vserver', 'object-store-server', 'modify', '-vserver', 's3server', 
                '-object-store-server ', 's3server.demo.netapp.com', '-status-admin', 'down']
      privilege: 'advanced'

  # vserver object-store-server modify -vserver vs-nfs-tier -object-store-server s3server.demo.netapp.com -is-http-enabled true -listener-port 80 -is-https-enabled false -status-admin up
  - name: Modify S3 Server to enable http & disable https
    netapp.ontap.na_ontap_command:
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
      command: ['vserver', 'object-store-server', 'modify', '-vserver', 's3server', 
                '-object-store-server ', 's3server.demo.netapp.com', '-status-admin', 'up',
                '-is-http-enabled', 'true', '-listener-port', '80', '-is-https-enabled', 'false']
      privilege: 'admin'

  # # Create S3 User for FabricPool 
  - name: Create S3 User for FabricPool 
    netapp.ontap.na_ontap_s3_users:
      state:                        present
      name:                         "{{ s3.user }}"
      vserver:                      "{{ ontap_tier_svm.name }}"
      comment:                      "{{ ontap_tier_svm.comment }}"
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
    register:                       s3_creds

  - name: Print ONTAP Response for S3 User create
    ansible.builtin.debug:
      msg:
        - "SAVE THESE credentials for: {{ s3.user }}"
        - "user access_key: {{ s3_creds.access_key }}"
        - "user secret_key: {{ s3_creds.secret_key }}"
    when: s3_creds.changed == "false"

  # # Create S3 Policy - Requires a bucket first
  # - name: Create an S3 policy
  #   netapp.ontap.na_ontap_s3_policies:
  #     state:                        "{{ state }}"
  #     name:                         "{{ s3.policy }}"
  #     vserver:                      "{{ ontap_secondary_nas_svm.name }}"
  #     comment:                      "{{ ontap_secondary_nas_svm.comment }}"
  #     statements:
  #       - sid: 1
  #         resources:
  #         - "{{ s3.bucket_name }}"
  #         - "{{ s3.bucket_name }}/*"
  #         actions:
  #           # - "*"
  #           - GetObject
  #           - PutObject
  #           - DeleteObject
  #           - ListBucket
  #           - GetBucketAcl
  #           - GetObjectAcl
  #           - ListAllMyBuckets
  #           - ListBucketMultipartUploads
  #           - ListMultipartUploadParts
  #           - CreateBucket
  #           - DeleteBucket
  #           - GetObjectTagging
  #           - PutObjectTagging
  #           - DeleteObjectTagging
  #           - GetBucketLocation
  #           - GetBucketVersioning
  #           - PutBucketVersioning
  #           - ListBucketVersions
  #           - GetBucketPolicy
  #           - PutBucketPolicy
  #           - DeleteBucketPolicy
  #         effect:
  #           allow
  #       - sid: 2
  #         resources:
  #           - "{{ s3.bucket_name }}"
  #           - "{{ s3.bucket_name }}/*"
  #         actions:
  #           - GetObject
  #           - PutObject
  #           - DeleteObject
  #           - ListBucket
  #           - GetBucketAcl
  #           - GetObjectAcl
  #           - ListBucketMultipartUploads
  #           - ListMultipartUploadParts
  #           - GetObjectTagging
  #           - PutObjectTagging
  #           - DeleteObjectTagging
  #           - GetBucketLocation
  #           - GetBucketVersioning
  #           - PutBucketVersioning
  #           - ListBucketVersions
  #           - GetBucketPolicy
  #           - PutBucketPolicy
  #           - DeleteBucketPolicy
  #           - PutLifecycleConfiguration
  #           - GetLifecycleConfiguration
  #         effect: allow
  #     hostname:                     "{{ ontap_hostname }}"
  #     <<: *input

  - name: Create S3 bucket with a policy
    netapp.ontap.na_ontap_s3_buckets:
      state:                        present
      hostname:                     "{{ ontap_hostname }}"
      <<: *input_02
      vserver:                      "{{ ontap_tier_svm.name }}"
      comment:                      "{{ ontap_tier_svm.comment }}"
      name:                         "{{ s3.bucket_name }}"
      size:                         "{{ s3.bucket_size }}"
      policy: 
        statements:
          - sid: FullAccessToS3User
            resources:
              - "{{ s3.bucket_name }}"
              - "{{ s3.bucket_name }}/*"
            actions:
              - GetObject
              - PutObject
              - DeleteObject
              - ListBucket
              - GetBucketAcl
              - GetObjectAcl
              - ListBucketMultipartUploads
              - ListMultipartUploadParts
              - GetObjectTagging
              - PutObjectTagging
              - DeleteObjectTagging
              - GetBucketLocation
              - GetBucketVersioning
              - PutBucketVersioning
              - ListBucketVersions
              - GetBucketPolicy
              - PutBucketPolicy
              - DeleteBucketPolicy
              - PutLifecycleConfiguration
              - GetLifecycleConfiguration
            effect: allow
            principals:
              - s3user
      